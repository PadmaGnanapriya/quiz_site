{"version":3,"sources":["Questionaire.js","App.js","index.js"],"names":["Questionaire","handleAnswer","data","question","correct_answer","incorrect_answers","showAnswers","shuffledAnswer","handleNextQuestion","sort","Math","random","handleNextQuestion2","alert","className","map","answer","bgColor","onClick","App","useState","questions","setQuesions","currentIndex","setCurrentIndex","score","setScore","setShowAnswers","useEffect","fetch","then","res","json","results","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6LA+CeA,EA5CK,SAAC,GACd,IADeC,EAChB,EADgBA,aAChB,IAD8BC,KAAMC,EACpC,EADoCA,SAAUC,EAC9C,EAD8CA,eAAgBC,EAC9D,EAD8DA,kBAAmBC,EACjF,EADiFA,YAE7EC,GADJ,EAD8FC,mBAE3E,CAACJ,GAAD,mBAAoBC,IAAmBI,MAAK,kBAAIC,KAAKC,SAAS,OAE7EC,EAAsB,WAAQC,MAAM,6BAG1C,OACA,6BACI,wBAAIC,UAAU,uBAAd,kBACA,wBAAIA,UAAU,QACd,yBAAKA,UAAU,OAAOX,EAAtB,SACA,yBAAKW,UAAU,8BACVP,EAAeQ,KAAI,SAACC,GACjB,IAAMC,EAASX,EACTU,GAAUZ,EACN,eACA,aACL,WACL,OACI,4BACIU,UAAS,UAAKG,EAAL,yFAGTC,QAAS,kBAAIjB,EAAae,KAAUA,OAMjD,4BAAQE,QAAS,kBAAIN,KACtBE,UAAS,0DADR,eAID,4BAAQI,QAAS,kBAAIN,KACrBE,UAAS,0DADT,mBCiBKK,MAjDf,WAAgB,IAAD,EACmBC,mBAAS,IAD5B,mBACLC,EADK,KACMC,EADN,OAE0BF,mBAAS,GAFnC,mBAENG,EAFM,KAEQC,EAFR,OAGWJ,mBAAS,GAHpB,mBAGNK,EAHM,KAGCC,EAHD,OAKuBN,oBAAS,GALhC,mBAKNd,EALM,KAKOqB,EALP,KAgCb,OAzBAC,qBAAU,WACRC,MATA,mEAUKC,MAAK,SAACC,GAAD,OAAOA,EAAIC,UAChBF,MAAK,SAAC5B,GACLoB,EAAYpB,EAAK+B,SACjBT,EAAgB,QAEtB,IAkBKH,EAAUa,OAAO,EAChB,yBAAKpB,UAAU,aACVS,GAAcF,EAAUa,OACrB,6CAAmBT,EAAnB,KAGF,kBAAC,EAAD,CACEvB,KAAMmB,EAAUE,GAChBtB,aAxBI,SAACe,GACbV,GACGU,IAAWK,EAAUE,GAAcnB,gBAClCsB,EAASD,EAAM,GAGvBE,GAAe,GAEfH,EAAgBD,EAAa,IAiBjBjB,YAAaA,EACbE,mBAfW,WACvBmB,GAAe,GACfH,EAAgBD,EAAa,OAiB9B,0CC7CLY,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.1bbfeb8d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nconst Questionaire =({handleAnswer, data:{question, correct_answer, incorrect_answers, showAnswers, handleNextQuestion},\r\n}) => {\r\n    const shuffledAnswer=[correct_answer, ...incorrect_answers].sort(()=>Math.random()-0.5);\r\n\r\n    const handleNextQuestion2 = () => { alert(\"Not define this function\");};\r\n\r\n\r\n    return(\r\n    <div>\r\n        <h2 className=\"flex justify-center\"> MCQ Question </h2>\r\n        <hr className=\"p-6\"></hr>\r\n        <div className=\"p-2\">{question} ****</div>\r\n        <div className=\"grid cols-2 gap-2 mt-4 p-2\">\r\n            {shuffledAnswer.map((answer)=>{\r\n                const bgColor= showAnswers\r\n                    ? answer == correct_answer\r\n                        ? 'bg-green-500'\r\n                        : 'bg-red-500'\r\n                    :'bg-white';\r\n                return(\r\n                    <button\r\n                        className={`${bgColor} \r\n                        p-4 text-purple-800 \r\n                        round shadow`}\r\n                        onClick={()=>handleAnswer(answer)}>{answer}\r\n                    </button>\r\n                );\r\n            })}\r\n        </div>\r\n\r\n           <button onClick={()=>handleNextQuestion2()}\r\n          className={`ml-auto bg-purple-700 text-white p-4 round shadow mt-6`}>\r\n           Show answer\r\n        </button>\r\n          <button onClick={()=>handleNextQuestion2()}\r\n          className={`ml-auto bg-purple-700 text-white p-4 round shadow mt-6`}>\r\n            Next Question\r\n        </button>\r\n    </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default Questionaire;\r\n","import React, {useEffect, useState} from 'react';\nimport Questionaire from \"./Questionaire\";\n\nconst API_URL=\n    'https://opentdb.com/api.php?amount=10&category=18&type=multiple';\nfunction App() {\n   const [questions, setQuesions]=useState([]);\n  const [currentIndex, setCurrentIndex]= useState(0);\n  const [score, setScore]=useState(0);\n  // const [gameEnded, setGameEnded]=useState(false);\n  const [showAnswers, setShowAnswers]=useState(false);\n\n  useEffect(() => {\n    fetch(API_URL)\n        .then((res)=>res.json())\n        .then((data) => {\n          setQuesions(data.results);\n          setCurrentIndex(0);\n        });\n  },[]);\n\n  const handelAnswer =(answer)=>{\n      if(!showAnswers){\n          if(answer === questions[currentIndex].correct_answer){\n              setScore(score+1);\n          }\n      }\n      setShowAnswers(true);\n      // handleNextQuestion();\n      setCurrentIndex(currentIndex+1);\n  };\n\n  const handleNextQuestion = () => {\n      setShowAnswers(false);\n      setCurrentIndex(currentIndex+1);\n  };\n\n  return questions.length>0 ?  (\n          <div className='container'>\n              {currentIndex>=questions.length?(\n                  <h2>Your score is {score} </h2>\n\n              ):(\n                <Questionaire\n                  data={questions[currentIndex]}\n                  handleAnswer={handelAnswer}\n                  showAnswers={showAnswers}\n                  handleNextQuestion={handleNextQuestion}\n                />\n              )}\n          </div>\n  ):(<div> Loading</div>);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}